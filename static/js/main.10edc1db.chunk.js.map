{"version":3,"sources":["components/readRepos.js","components/createRepo.js","components/home.js","App.js","reportWebVitals.js","index.js"],"names":["Repos","useState","name","setName","apidata","setApiData","loading","setLoading","profile","setProfile","fetch","setFetch","useEffect","className","Grid","TextField","variant","label","onChange","event","target","value","required","Button","color","size","onClick","preventDefault","axios","get","then","response","data","console","log","Modal","open","onClose","backdrop","keyboard","Box","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","alt","src","avatar_url","height","href","html_url","followers","following","public_repos","class","location","map","stargazers_count","default_branch","language","Create","desc","setDesc","token","setToken","privacy","setPrivacy","status","setStatus","config","headers","Authorization","body","type","Switch","inputProps","post","alert","catch","e","Home","flexGrow","AppBar","Toolbar","to","path","component","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10edc1db.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { TextField, Button, Grid, Modal, Box } from '@mui/material';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\nexport const Repos = () => {\r\n\r\n    const [name, setName] = useState()\r\n    const [apidata, setApiData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [profile, setProfile] = useState([])\r\n    const [fetch, setFetch] = useState(false)\r\n    const handleClose = () => setFetch(false)\r\n\r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 400,\r\n        bgcolor: 'background.paper',\r\n        border: '2px solid #fff',\r\n        boxShadow: 20,\r\n        p: 4,\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n    }, [apidata, name, fetch])\r\n\r\n    const handleSearch = (event) => {\r\n        event.preventDefault()\r\n        setLoading(true)\r\n        axios.get(`https://api.github.com/users/${name}/repos`)\r\n            .then((response) => {\r\n                setLoading(false)\r\n                setApiData(response.data)\r\n                console.log(apidata)\r\n            })\r\n    }\r\n\r\n    const handleProfile = (event) => {\r\n        event.preventDefault()\r\n        setFetch(true)\r\n        axios.get(`https://api.github.com/users/${name}`)\r\n            .then((response) => {\r\n                setProfile(response.data)\r\n                console.log(profile)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mt-3 mb-3\">\r\n                <h1 className=\"text-center\">Read Repositories</h1>\r\n                <form className=\"text-center my-4\">\r\n                    <div className=\"my-3\">\r\n                        <Grid>\r\n                            <TextField variant=\"standard\" label=\"Enter Username\"\r\n                                onChange={(event) => setName(event.target.value)}\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                    </div>\r\n                    <div className=\"my-3\">\r\n                        <Grid>\r\n                            <Button variant=\"contained\" color=\"primary\" size=\"small\"\r\n                                onClick={handleSearch}>{loading ? \"Searching...\" : \"Search\"}</Button>\r\n                        </Grid>\r\n                    </div>\r\n                    <div className=\"my-4\">\r\n                        <Grid>\r\n                            <Button variant=\"contained\" color=\"success\" size=\"small\"\r\n                                onClick={handleProfile}>Read Profile</Button>\r\n                        </Grid>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n\r\n            <Modal open={fetch} onClose={handleClose} backdrop=\"static\" keyboard={false} aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\">\r\n                <Box sx={style}>\r\n                    <div>\r\n                        <div className=\"custom-profile py-3\">\r\n                            <img className=\"profile-img\" alt=\"profile\" src={profile.avatar_url} width=\"100\" height=\"100\"/>\r\n                        </div>\r\n                        <h5 className=\"text-center\">{profile.name}</h5>\r\n                        <h3 className=\"text-center\"><a href={profile.html_url}><i className=\"fab fa-github-square\"></i></a></h3>\r\n                        <h6>Followers : {profile.followers}</h6>\r\n                        <h6>Following : {profile.following}</h6>\r\n                        <h6>Repositories : {profile.public_repos}</h6>\r\n                        <h6 className=\"text-center py-2\"><i class=\"fas fa-map-marker-alt\"></i> : {profile.location ? profile.location : \"Unavailable\"}</h6>\r\n                    </div>\r\n                </Box>\r\n            </Modal>\r\n\r\n            <div className=\"mt-3 pt-3 mb-3 mx-auto container\">\r\n                <table className=\"table table-hover table-borderless\">\r\n                    <caption className=\"text-center\">List of Repositories for {name}</caption>\r\n                    <thead>\r\n                        <tr className=\"table-dark\">\r\n                            <th>Name</th>\r\n                            <th>Stars</th>\r\n                            <th>Default Branch</th>\r\n                            <th>Main Language</th>\r\n                            <th>Repository Link</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"text-left\">\r\n                        {apidata.map((data) => {\r\n                            return (\r\n                                <tr>\r\n                                    <td>{data.name}</td>\r\n                                    <td>{data.stargazers_count}</td>\r\n                                    <td>{data.default_branch}</td>\r\n                                    <td>{data.language ? data.language : \"None\"}</td>\r\n                                    <td>\r\n                                        <a href={data.html_url} className=\"text-decoration-none\">\r\n                                            <i className=\"fas fa-external-link-alt\"></i>\r\n                                        </a>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React,{ useState} from 'react';\r\nimport { TextField, Grid, Button, Switch } from '@mui/material';\r\nimport '../App.css';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const Create = () => {\r\n    const [ desc , setDesc] = useState();\r\n    const [ name, setName] = useState();\r\n    const [ token, setToken] = useState();\r\n    //const [ description, setDescription] = useState();\r\n    const [ privacy, setPrivacy] = useState(false);\r\n    const [ status, setStatus] = useState(false)\r\n\r\n    const config = {\r\n        headers : { Authorization : `Bearer ${token}` }\r\n    }\r\n     const body = {\r\n         \"name\" : name,\r\n         \"description\" : desc,\r\n         \"private\" : privacy\r\n     }\r\n    const handleCreateRepository = () => {\r\n        \r\n        setStatus(true)\r\n        axios.post(`https://api.github.com/user/repos`,\r\n        body,\r\n        config\r\n        ).then((response) => {\r\n            setStatus(false)\r\n            console.log(response)\r\n            alert(`Repository Named ${name} is Created Successfully`)\r\n        }).catch((e) => {\r\n            setStatus(false)\r\n            alert(`Error Creating Repository. Repo either Exists or Wrong naming.`)\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"text-center mt-4 mb-4 pb-2 pt-2\">\r\n            <form className=\"crud-form text-center pt-3 pb-3\" >\r\n                <h3>Create Github Repository</h3>\r\n                <div className=\"crud-form-field\">\r\n                    <Grid>\r\n                        <TextField variant=\"standard\" label=\"Repo Name\" required \r\n                        onChange={(event) => setName(event.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n\r\n                <div className=\"crud-form-field\">\r\n                    <Grid>\r\n                        <TextField variant=\"standard\" label=\"Description\" required \r\n                        onChange={(event) => setDesc(event.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n                \r\n                <div className=\"crud-form-field\">\r\n                    <Grid>\r\n                        <TextField variant=\"standard\" label=\"Access Token\" type=\"password\" required \r\n                        onChange={(event) => setToken(event.target.value)}\r\n                        />\r\n                    </Grid>\r\n                </div>\r\n\r\n                <Grid>\r\n                    <p className=\"terms\">\r\n                        <Switch\r\n                            color=\"secondary\"\r\n                            size=\"medium\"\r\n                            inputProps={{ 'aria-label': 'uncontrolled-checkbox' }} required\r\n                            onChange={(event) => setPrivacy(!privacy)}\r\n                        />\r\n                        Create as Private Repository\r\n                    </p>\r\n                </Grid>\r\n\r\n                <div className=\"crud-form-field\">\r\n                    <Grid>\r\n                        <Button variant=\"contained\" color=\"primary\" size=\"small\" onClick={handleCreateRepository}>{status ? \"Creating...\" : \"Create\"}</Button>\r\n                    </Grid>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, AppBar, Box, Toolbar } from '@mui/material';\r\nimport { Repos } from './readRepos';\r\nimport { Create } from './createRepo';\r\n//import { NotFound } from './NotFound';\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom';\r\nimport \"../App.css\";\r\n\r\nexport const Home = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"mt-2 mx-2\">\r\n                <Box sx={{ flexGrow: 1 }}>\r\n                    <AppBar position=\"static\">\r\n                        <Toolbar>\r\n                            \r\n                            <div className=\"mx-3 nav\">\r\n                                <i className=\"fab fa-github\"></i>\r\n                            </div>\r\n                            \r\n                            <div className=\"mx-3\">\r\n                                <Link to=\"/create\" className=\"text-decoration-none\">\r\n                                    <Button variant=\"contained\" size=\"large\">\r\n                                        <i className=\"fas fa-plus mx-2\"></i>\r\n                                        Create Repository\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n                            <div className=\"mx-3\">\r\n                                <Link to=\"/read\" className=\"text-decoration-none\">\r\n                                    <Button variant=\"contained\" size=\"large\">\r\n                                        <i className=\"fas fa-bookmark mx-2\"></i>\r\n                                        Read Repositories\r\n                                    </Button>\r\n                                </Link>\r\n                            </div>\r\n\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                </Box>\r\n            </div>\r\n            <Route path=\"/create\" component={Create} exact />\r\n            <Route path=\"/read\" component={Repos} exact />\r\n            \r\n        </Router>\r\n    )\r\n}","//import logo from './logo.svg';\nimport './App.css';\nimport './components/readRepos';\n\nimport { Home } from './components/home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}